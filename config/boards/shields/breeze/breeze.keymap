
/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

/ { 


    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
	td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
#define Layer_One 0
#define Layer_Two 1
#define Layer_Three 2
#define Layer_Four 3
#define Layer_Five 4

	keymap {
		compatible = "zmk,keymap";
// Ref: https://zmkfirmware.dev/docs/codes/

		Layer_One {
// ----------------------------------------------------------------------------------------------------------------------------------
// |       |     |     |        |        |      |                          |      |        |        |      |       |      | |     |      |      |
// |       |  Q  |  W  |  E     |  R     |  T   |                          |  Y   |   U    |   I    |  O   |   P   |      | |     |      |      |
// |       |  A  |  S  | D/LALT | F/LSUP |  G   |                          |  H   | J/RSup | K/RAlt |  L   |   ;   |      | |     |      |      |
// |       |  Z  |  X  |  C     |  V     |  B   |                          |  N   |  M    |  ,    |  .   |   /   |      | |     |      |      |
//                     |      |      | MEH  | LSHIFT |         | RCTRL | Lay2 |       |       |
			bindings = <
&trans  &trans &trans &trans      &trans      &trans                           &trans   &trans   &trans    &trans  &trans   &trans    &trans  &trans  &trans
&trans  &kp Q  &kp W  &kp E       &kp R       &kp T                            &kp Y    &kp U    &kp I     &kp O   &kp P    &trans    &trans  &trans  &trans
&trans  &kp A  &kp S  &hm LALT D  &hm LGUI F  &kp G                            &kp H    &hm RGUI J  &hm RALT K  &kp L   &kp SEMI &trans            &trans 
&trans  &kp Z  &kp X  &kp C       &kp V       &kp B                            &kp N    &kp M    &kp COMMA &kp DOT &kp FSLH &trans    &trans  &trans  &trans
                    &trans &trans &mt LC(LS(LALT)) &sk LSHIFT    &sk RCTRL &to 1    &trans   &trans
			>;
		};

		Layer_Two {
// ---------------------------------------------------------------------------------------------------------------------------------- 
// |      |       |         |      |      |      |                        |      |      |      |      |       |       | |      |      |      | 
// |      |  1!   |  2@     |  3#  |  4$  |  5%  |                        |  6^  |  7&  |  8*  |  9(  |   0)  |       | |      |      |      | 
// |      |  ESC  |  `~     |  -_  |  =+  | PgUp |                        |  '"  |  [{  |  ]}  |  \|  | ENTER |       | |      |      |      | 
// |      |  TAB  | PrntScn |      |      | PgDn |                        | HOME |  END | INS  | DEL  | Lay4  |       | |      |      |      | 
//                       |      |      | Lay1 | LSHIFT |      |  RALT  | Lay3 |      |      |
			bindings = <
&trans   &trans   &trans     &trans     &trans     &trans                          &trans    &trans    &trans    &trans    &trans   &trans    &trans  &trans  &trans    
&trans   &kp N1   &kp N2     &kp N3     &kp N4     &kp N5                          &kp N6    &kp N7    &kp N8    &kp N9    &kp N0   &trans    &trans  &trans  &trans 
&trans   &kp ESC  &kp GRAVE  &kp MINUS  &kp EQUAL  &kp PG_UP                       &kp SQT   &kp LBKT  &kp RBKT  &kp BSLH  &kp RET  &trans            &trans
&trans   &kp TAB  &kp PSCRN  &trans     &trans     &kp PG_DN                       &kp HOME  &kp END   &kp INS   &kp DEL   &to 3    &trans    &trans  &trans  &trans
                                   &trans  &trans  &to 0  &sk LSHIFT     &sk RALT  &to 2  &trans  &trans
			>;
		};

		Layer_Three {
// ---------------------------------------------------------------------------------------------------------------------------------- 
// |     |      |        |        |        |        |                    |      |       |       |      |        |     | |     |      |      | 
// |     | Esc  | MWhLe  | MousUp | MWhRi  | MWhUp  |                    |      |       |       |  DEL |  BACK  |     | |     |      |      | 
// |     | Tab  | MLeft  | MoDwn  | MRight | MWhDn  |                    |  <-  |   ↓   |   ↑   |  ->  | ENTER  |     | |     |      |      | 
// |     | Lay5 |        |        |        |        |                    | LClk |  RClk | MClk  |  Ms4  |  Ms5  |     | |     |      |      | 
//                       |        |        |  Lay1  |  LWin  |  |  RAlt  | Lay2 |       |       |
			bindings = <
&trans   &trans   &trans  &trans  &trans  &trans                          &trans     &trans     &trans     &trans      &trans      &trans    &trans  &trans  &trans    
&trans   &kp ESC  &trans  &trans  &trans  &trans                          &trans     &trans     &trans     &kp DEL     &kp BSPC    &trans    &trans  &trans  &trans 
&trans   &kp TAB  &trans  &trans  &trans  &trans                          &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT   &kp ENTER   &trans            &trans
&trans   &to 4    &trans  &trans  &trans  &trans                          &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans
                          &trans  &trans  &to 0  &kp LMETA      &kp RALT  &to 1       &trans     &trans
						   
			>;
		};
		
		Layer_Four {
// ---------------------------------------------------------------------------------------------------------------------------------- 
// |     |     |     |      |      |        |                    |      |       |       |       |       |       |  |     |      |      | 
// |     |     |     |      |   /  |    *   |                    |   -  |   7   |   8   |   9   | BACK  |       |  |     |      |      | 
// |     |     |     |      |      |    +   |                    |   =  |   4   |   5   |   6   | ENTER |       |  |     |      |      | 
// |     |     |     |      |   ,  |    .   |                    |   0  |   1   |   2   |   3   | Lay3  |       |  |     |      |      | 
//                   |      |      |  Lay1  |  LGUI  |  |  RALT  | Lay2 |       |       |
			bindings = <
&trans   &trans  &trans  &trans  &trans         &trans                           &trans        &trans     &trans     &trans     &trans     &trans    &trans  &trans  &trans    
&trans   &trans  &trans  &trans  &kp KP_DIVIDE  &kp KP_MULTIPLY                  &kp KP_MINUS  &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp BSPC   &trans    &trans  &trans  &trans 
&trans   &trans  &trans  &trans  &trans         &kp KP_PLUS                      &kp KP_EQUAL  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp ENTER  &trans            &trans
&trans   &trans  &trans  &trans  &kp KP_COMMA   &kp KP_DOT                       &kp KP_N0     &kp KP_N1  &kp KP_N2  &kp KP_N3  &to 2      &trans    &trans  &trans  &trans
                                &trans  &trans  &to 0  &kp LMETA       &kp RALT  &to 1   &trans  &trans
			>;
		};
		
				Layer_Five {
// ---------------------------------------------------------------------------------------------------------------------------------- 
// |     |       |       |       |       |      |                    |      |      |      |      |      |      |  |      |      |      | 
// |     | BT_1  | BT_2  | BT_3  | BT_4  |      |                    |  F11 |  F12 |      |      |      |      |  |      |      |      | 
// |     |       |       |       |       |      |                    |  F6  |  F7  |  F8  |  F9  | F10  |      |  |      |      |      | 
// |     | BtClr |       |       |       |      |                    |  F1  |  F2  |  F3  |  F4  |  F5  |      |  |      |      |      | 
//                        |      |       | Lay1 |        |  |        | Lay2 |      |      |
			bindings = <
&trans   &trans        &trans        &trans        &trans        &trans                       &trans   &trans   &trans  &trans  &trans   &trans    &trans  &trans  &trans    
&trans   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans                       &kp F11  &kp F12  &trans  &trans  &trans   &trans    &trans  &trans  &trans 
&trans   &trans        &trans        &trans        &trans        &trans                       &kp F6   &kp F7   &kp F8  &kp F9  &kp F10  &trans            &trans
&trans   &bt BT_CLR    &trans        &trans        &trans        &trans                       &kp F1   &kp F2   &kp F3  &kp F4  &kp F5   &trans    &trans  &trans  &trans
                                                 &trans  &trans  &to 0   &trans       &trans  &to 1   &trans  &trans
			>;
		};
	};
};
